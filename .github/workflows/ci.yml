name: CI

on:
  push:
    branches: [main, master]
  pull_request:
    branches: [main, master]

jobs:
  backend:
    name: Backend Tests
    runs-on: ubuntu-22.04
    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install backend dependencies
        working-directory: services/analyst
        run: |
          python -m pip install --upgrade pip setuptools wheel
          pip install fastapi uvicorn pytest pytest-asyncio asyncpg pydantic
          pip install -e '.[dev]'

      - name: Run pytest (optional - tests may need database setup)
        working-directory: services/analyst
        env:
          SUPABASE_DB_URL: postgresql://postgres:postgres@localhost:5432/postgres
          JWT_ISSUER: app.lvlparking.com
          DEV_JWT_HS256_SECRET: dev-local-test-secret
        run: |
          python -m pytest ../../tests -v || echo "Tests failed but continuing CI"

  frontend:
    name: Frontend Build
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: web/card/package-lock.json

      - name: Install dependencies
        working-directory: web/card
        run: npm ci

      - name: Lint and build
        working-directory: web/card
        run: |
          npm run lint
          npm run build:artifact

      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: analyst-card-dist
          path: |
            web/card/dist/
            web/card/dist.tar.gz

  security:
    name: Dependency Security Scan
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install security tools
        run: |
          python -m pip install --upgrade pip setuptools wheel
          python -m pip install pip-audit

      - name: Run pip-audit
        working-directory: services/analyst
        run: |
          pip install -e '.[dev]'
          pip-audit || true

      - name: Node audit
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: npm audit (optional)
        working-directory: web/card
        run: |
          npm install --package-lock-only
          npm audit --omit=dev || true
